cmake_minimum_required(VERSION 3.0)
find_package(Threads REQUIRED)

set(CMAKE_C_COMPILER mpicc)
set(CMAKE_CXX_COMPILER mpicxx)

set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_STANDARD_REQUIRED on)


#get_cmake_property(_variableNames VARIABLES)
#list (SORT _variableNames)
#foreach (_variableName ${_variableNames})
    #message(STATUS "${_variableName}=${${_variableName}}")
#endforeach()
#file(GLOB_RECURSE  sources "src/*.cpp" )
#file(GLOB_RECURSE  test_mpi_src "test/test_mpi.cpp" )
set(test_mpi_src "test/test_mpi.cpp" )
set(test_mat_src "test/test_mat.cpp" "src/init.cpp" "src/matrix_op.cpp" "src/solver.cpp")
foreach (_srcName ${test_mpi_src})
    message(STATUS "${_srcName}")
endforeach()
# foreach (_srcName ${tests})
#     message(STATUS "${_srcName}")
# endforeach()


#add_executable(prog ${sources})
#set(CXX_FLAGS "-O3 --fast-math -Wall -march=native")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wextra -pedantic -Wall")
set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -O0 -fsanitize=address")
set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -O3 -ffast-math -march=native")
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "-fsanitize=address")
OPTION(AVX "Use avx instructions")
IF(AVX)
    MESSAGE("USING AVX")
    ADD_DEFINITIONS(-DAVX)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -mavx")
ENDIF(AVX)
#add_compile_options(-O3 --fast-math -Wall)
add_executable(test_mpi ${test_mpi_src})
add_executable(test_mat ${test_mat_src})
target_include_directories(test_mat PRIVATE src)
target_link_libraries(test_mat m)
# mpirun -n 2 xterm -hold -e gdb -ex run --args ./test_mat 10 7
# mpirun -n 2 xterm -hold -e ./test_mat 10 7